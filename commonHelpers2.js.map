{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["const formData = {\n  email: \"\",\n  message: \"\"\n};\nconst storageKey = \"feedback-form-state\";\n// Функція оновлення formData\nfunction formUpdate() {\n  formData.email = document.querySelector('input[name=\"email\"]').value;\n  formData.message = document.querySelector('textarea').value;\n\n  // Зберігаємо оновлений formData в локальне сховище\n  localStorage.setItem(storageKey, JSON.stringify(formData));\n\n  // Заповнюємо форму збереженими даними\n  document.querySelector('input[name=\"email\"]').value = formData.email;\n  document.querySelector('textarea').value = formData.message;\n}\n\n// Делегування події input для відстеження змін у формі\nconst form = document.querySelector('.feedback-form');\nform.addEventListener('input', formUpdate);\n\n// Завантаження даних форми\nwindow.addEventListener(\"load\", () => {\n  const jsonData = localStorage.getItem(storageKey); // отримує значення з локального сховища\n  if (jsonData) {\n    const data = JSON.parse(jsonData); // перетворює JSON у JS об'єкт\n    document.querySelector('input[name=\"email\"]').value = data.email; // Доступ до поля вводу email за name\n    document.querySelector('textarea').value = data.message; // Доступ до поля вводу повідомлення за селектором\n  }\n});\n\n// Додаємо слухача події submit до форми\nform.addEventListener('submit', function(event) {\n  event.preventDefault(); // Запобігає відправці форми за замовчуванням\n\n  // Перевіряємо, чи заповнені всі поля\n  if (formData.email === \"\" || formData.message === \"\") {\n    alert(\"Fill please all fields\");\n    return; // Зупиняємо виконання функції\n  }\n\n  // Виводимо formData в консоль\n  console.log(formData);\n\n  // Очищаємо локальне сховище\n  localStorage.removeItem(storageKey);\n\n  // Очищаємо formData та поля форми\n  formData.email = \"\";\n  formData.message = \"\";\n  document.querySelector('input[name=\"email\"]').value = \"\";\n  document.querySelector('textarea').value = \"\";\n\n  // Додаткові дії (якщо потрібно)\n\n  // Дозволяємо відправлення форми\n  event.target.submit();\n});\n\n\n\n\n/*\nconst storageKey = \"feedback-form-state\";\nconst formRefs = {\n  form: document.querySelector(\".feedback-form\"),\n  input:document.querySelector('input[type=\"email\"]'),\n  message:document.querySelector(\"textarea\"),\n};\n\n  /*\n  Це об'єкт, де:\n\nКлючі - це рядки, які відповідають назвам властивостей.\nЗначення - це посилання на DOM-елементи, знайдені за допомогою document.querySelector.\n\n  */\n\n/**\n * - Скасовуємо стандартну поведінку ✅\n * - Очищуємо форму ✅\n */\n\n/*\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  event.currentTarget.reset();\n \n}\nformRefs.form.addEventListener(\"submit\",onFormSubmit);// при сабміті скасовуєм стандартну поведінку і очищуєм\n\n\n// TEXRAREA\n// Отримаємо значення поля;\n// Зберігаємо його у сховище;\nfunction onTextareaInput(event) {\n  console.log(event.currentTarget.value);\n  localStorage.setItem(storageKey, event.currentTarget.value)\n}\n\nformRefs.message.addEventListener(\"input\", onTextareaInput)  // отримаємо посилання на textarea і за доп input прослуховуєм подію введення і реагувати на введення користувача\n\n\n// EMAIL\nfunction EmailInput(event) {\n  console.log(event.currentTarget.value);\n  localStorage.setItem(storageKey,event.currentTarget.value)\n}\nformRefs.input.addEventListener(\"input\", EmailInput);\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\nconst formData = {\n    email: \"\", \n    message: \"\" \n}\n\nconst storageKey = \"feedback-form-state\";\nconst form = document.querySelector(\".feedback-form\");\n\n\nfunction readFormData(form) {\n    const email = form.email.value;\n    const message = form.message.value; \n    return {\n        email,\n        message\n    }\n\n}\n\nwindow.addEventListener(\"load\", () => {\n    const jsonData = localStorage.getItem(storageKey); // отримує з.ння з локального сховища\n    if (jsonData) {\n      const data = JSON.parse(jsonData);// перетворює JSON у JS об*єкт\n      form.email.value = data.email;\n      form.message.value = data.message; // чому навпаки не працюэ?\n \n    }\n  });\n  // Функція, що надається як аргумент, буде виконана після того, як сторінка буде повністю завантажена. Це робить load.\n\n\n\nform.addEventListener(\"submit\", (event) => {  // ця функ.отримує об*єкт події event як аргумент. \n    event.preventDefault(); // запобігає стандартному надсиланню форми.\n    const data = readFormData(event.currentTarget);// викликаєм ф-цію, передаючи їй event.currentTarget як аргумент, щоб отримати дані, введені користувачем.\n    console.log(data);\n\n\n    if (data.email && data.message) { // Якщо обидва значення істині, код у блоці if буде виконано. \n        console.log(data);\n        localStorage.removeItem(storageKey); // Цей рядок коду видаляє значення з локального сховища за ключем storageKey.\n        // Це робиться для того, щоб очистити збережені дані форми, якщо користувач успішно надіслав її.\n        formData.email = \"\";\n        formData.message = \"\";\n        form.email.value = \"\";\n        form.message.value = \"\";\n      } else {\n        alert(\"Fill please all fields\");\n      }\n\n\n\n\n    const jsonData = JSON.stringify(data);\n    localStorage.setItem(storageKey, jsonData);\n})\n\n\n*/"],"names":["formData","storageKey","formUpdate","form","jsonData","data","event"],"mappings":"oCAAA,MAAMA,EAAW,CACf,MAAO,GACP,QAAS,EACX,EACMC,EAAa,sBAEnB,SAASC,GAAa,CACpBF,EAAS,MAAQ,SAAS,cAAc,qBAAqB,EAAE,MAC/DA,EAAS,QAAU,SAAS,cAAc,UAAU,EAAE,MAGtD,aAAa,QAAQC,EAAY,KAAK,UAAUD,CAAQ,CAAC,EAGzD,SAAS,cAAc,qBAAqB,EAAE,MAAQA,EAAS,MAC/D,SAAS,cAAc,UAAU,EAAE,MAAQA,EAAS,OACtD,CAGA,MAAMG,EAAO,SAAS,cAAc,gBAAgB,EACpDA,EAAK,iBAAiB,QAASD,CAAU,EAGzC,OAAO,iBAAiB,OAAQ,IAAM,CACpC,MAAME,EAAW,aAAa,QAAQH,CAAU,EAChD,GAAIG,EAAU,CACZ,MAAMC,EAAO,KAAK,MAAMD,CAAQ,EAChC,SAAS,cAAc,qBAAqB,EAAE,MAAQC,EAAK,MAC3D,SAAS,cAAc,UAAU,EAAE,MAAQA,EAAK,OACjD,CACH,CAAC,EAGDF,EAAK,iBAAiB,SAAU,SAASG,EAAO,CAI9C,GAHAA,EAAM,eAAc,EAGhBN,EAAS,QAAU,IAAMA,EAAS,UAAY,GAAI,CACpD,MAAM,wBAAwB,EAC9B,MACD,CAGD,QAAQ,IAAIA,CAAQ,EAGpB,aAAa,WAAWC,CAAU,EAGlCD,EAAS,MAAQ,GACjBA,EAAS,QAAU,GACnB,SAAS,cAAc,qBAAqB,EAAE,MAAQ,GACtD,SAAS,cAAc,UAAU,EAAE,MAAQ,GAK3CM,EAAM,OAAO,QACf,CAAC"}