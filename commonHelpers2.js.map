{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["const formData = {\n  email: \"\",\n  message: \"\",\n};\n\nconst storageKey = \"feedback-form-state\";\n\nconst formRefs = {\n  form: document.querySelector(\".feedback-form\"),\n  input: document.querySelector('input[type=\"email\"]'),\n  message: document.querySelector(\"textarea\"),\n};\n\n \n\n\n// 1. Збереження даних форми в localStorage\nfunction saveFormDataToLocalStorage() {\n \n  localStorage.setItem(storageKey, JSON.stringify(formData));\n}\n\n//2. Оновлення значення email\nfunction onFormInput(event) {\n  event.preventDefault();\n  formData.email = event.target.value.trim();\n  saveFormDataToLocalStorage();\n}\n\n// 3. Оновлення значення повідомлення\nfunction onTextareaInput(event) {\n  formData.message = event.target.value.trim();\n  saveFormDataToLocalStorage();\n}\n\n\nformRefs.input.addEventListener(\"input\", onFormInput);\nformRefs.message.addEventListener(\"input\", onTextareaInput);\n\n\n// 4. Відправлення форми\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  // Перевіряємо, чи заповнені всі поля\n  if (formData.email === \"\" || formData.message === \"\") {\n    alert(\"Fill please all fields\");\n    return; // Зупиняємо виконання функції\n  }\n//Після того як ми засабмітили формуб дані відправились, виводим в консольку.\nconsole.log(formData);\nconsole.log('✅ Data send successfully');\n\n\n\n//5. очищаємо форму\nevent.currentTarget.reset();\n// у форми є метод ресет, який дозволяє очистити поля\n\n// 6. Після відправилення видаляємо повідомлення зі сховища.\nlocalStorage.removeItem(storageKey);\n\n}\n\nformRefs.form.addEventListener(\"submit\", onFormSubmit); \n\n\nconst rawData = localStorage.getItem(storageKey);\nif (rawData){\n    const data = JSON.parse(rawData);\n    formRefs.input.value = data.email;\n    formRefs.message.value = data.message;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\nconst formData = {\n    email: \"\", \n    message: \"\" \n}\n\nconst storageKey = \"feedback-form-state\";\nconst form = document.querySelector(\".feedback-form\");\n\n\nfunction readFormData(form) {\n    const email = form.email.value;\n    const message = form.message.value; \n    return {\n        email,\n        message\n    }\n\n}\n\nwindow.addEventListener(\"load\", () => {\n    const jsonData = localStorage.getItem(storageKey); // отримує з.ння з локального сховища\n    if (jsonData) {\n      const data = JSON.parse(jsonData);// перетворює JSON у JS об*єкт\n      form.email.value = data.email;\n      form.message.value = data.message; // чому навпаки не працюэ?\n \n    }\n  });\n  // Функція, що надається як аргумент, буде виконана після того, як сторінка буде повністю завантажена. Це робить load.\n\n\n\nform.addEventListener(\"submit\", (event) => {  // ця функ.отримує об*єкт події event як аргумент. \n    event.preventDefault(); // запобігає стандартному надсиланню форми.\n    const data = readFormData(event.currentTarget);// викликаєм ф-цію, передаючи їй event.currentTarget як аргумент, щоб отримати дані, введені користувачем.\n    console.log(data);\n\n\n    if (data.email && data.message) { // Якщо обидва значення істині, код у блоці if буде виконано. \n        console.log(data);\n        localStorage.removeItem(storageKey); // Цей рядок коду видаляє значення з локального сховища за ключем storageKey.\n        // Це робиться для того, щоб очистити збережені дані форми, якщо користувач успішно надіслав її.\n        formData.email = \"\";\n        formData.message = \"\";\n        form.email.value = \"\";\n        form.message.value = \"\";\n      } else {\n        alert(\"Fill please all fields\");\n      }\n\n\n\n\n    const jsonData = JSON.stringify(data);\n    localStorage.setItem(storageKey, jsonData);\n})\n\n\n*/"],"names":["formData","storageKey","formRefs","saveFormDataToLocalStorage","onFormInput","event","onTextareaInput","onFormSubmit","rawData","data"],"mappings":"oCAAA,MAAMA,EAAW,CACf,MAAO,GACP,QAAS,EACX,EAEMC,EAAa,sBAEbC,EAAW,CACf,KAAM,SAAS,cAAc,gBAAgB,EAC7C,MAAO,SAAS,cAAc,qBAAqB,EACnD,QAAS,SAAS,cAAc,UAAU,CAC5C,EAMA,SAASC,GAA6B,CAEpC,aAAa,QAAQF,EAAY,KAAK,UAAUD,CAAQ,CAAC,CAC3D,CAGA,SAASI,EAAYC,EAAO,CAC1BA,EAAM,eAAc,EACpBL,EAAS,MAAQK,EAAM,OAAO,MAAM,KAAI,EACxCF,GACF,CAGA,SAASG,EAAgBD,EAAO,CAC9BL,EAAS,QAAUK,EAAM,OAAO,MAAM,KAAI,EAC1CF,GACF,CAGAD,EAAS,MAAM,iBAAiB,QAASE,CAAW,EACpDF,EAAS,QAAQ,iBAAiB,QAASI,CAAe,EAI1D,SAASC,EAAaF,EAAO,CAG3B,GAFAA,EAAM,eAAc,EAEhBL,EAAS,QAAU,IAAMA,EAAS,UAAY,GAAI,CACpD,MAAM,wBAAwB,EAC9B,MACD,CAEH,QAAQ,IAAIA,CAAQ,EACpB,QAAQ,IAAI,0BAA0B,EAKtCK,EAAM,cAAc,QAIpB,aAAa,WAAWJ,CAAU,CAElC,CAEAC,EAAS,KAAK,iBAAiB,SAAUK,CAAY,EAGrD,MAAMC,EAAU,aAAa,QAAQP,CAAU,EAC/C,GAAIO,EAAQ,CACR,MAAMC,EAAO,KAAK,MAAMD,CAAO,EAC/BN,EAAS,MAAM,MAAQO,EAAK,MAC5BP,EAAS,QAAQ,MAAQO,EAAK,OAClC"}